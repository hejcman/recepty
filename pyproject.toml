[project]
name = "Project Template"
version = "1.0.0"
authors = [
    { name="FooBar", email="foo@bar.xyz" }
]
description = "A template repository for my Python projects."
readme = "README.md"
license = { file="LICENSE" }
requires-python = ">=3.11"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Development Status :: 2",
    "Natural Language :: English",
]

### Documentation configuration ########################################################
[tool.sphinx-pyproject]
# For the full list of built-in configuration values, see the documentation:
# https://www.sphinx-doc.org/en/master/usage/configuration.html
# Project information is automatically parsed from the [project] table.
# For the full documentation, see:
# https://sphinx-pyproject.readthedocs.io/en/latest/usage.html

# -- General configuration ---------------------------------------------------
# https://www.sphinx-doc.org/en/master/usage/configuration.html#general-configuration

copyright = "Lukáš Hejcman"
extensions = [
    # Adding support for .. todo:: and .. todolist:: directives in docstrings.
    # https://www.sphinx-doc.org/en/master/usage/extensions/todo.html
    "sphinx.ext.todo",

    # This extension can import the modules you are documenting, and pull in
    # documentation from docstrings in a semi-automatic way.
    # https://www.sphinx-doc.org/en/master/usage/extensions/autodoc.html
    "sphinx.ext.autodoc",

    # Adding support for Google style docstrings. Comes bundled with Sphinx since 1.3.
    # https://www.sphinx-doc.org/en/master/usage/extensions/napoleon.html
    "sphinx.ext.napoleon",
]

templates_path = ['_templates']
exclude_patterns = ['_build', 'Thumbs.db', '.DS_Store']

# -- Options for HTML output -------------------------------------------------
# https://www.sphinx-doc.org/en/master/usage/configuration.html#options-for-html-output
html_theme = 'sphinx_rtd_theme'
html_static_path = ['_static']

### Ruff Code Linting ##################################################################
[tool.ruff]
extend-select = [
    "F",       # PyFlakes
    "E", "W",  # pycodestyle
    "PL",      # PyLint
    "N",       # PEP8 naming
    "B",       # Flake8 Bugbear
    "ICN",     # Flake8 import conventions
    "C4",      # Flake8 comprehensions
    "SIM",     # Flake8 simplify
    "C90",     # Mccabe complexity
]

src = ["src"]

# Exclude a variety of commonly ignored directories.
exclude = [
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    "build",
    "dist",
    "venv",
]
per-file-ignores = {}

# Same as Black.
line-length = 88

# Assume Python 3.11.
target-version = "py311"

[tool.ruff.mccabe]
# Set default complexity level to 5.
max-complexity = 5

[tool.ruff.pylint]
# Allow at most 8 arguments in a function call.
max-args = 8

### Mypy Type Checking #################################################################
[tool.mypy]
mypy_path = "src/package"

# Excluding tests
exclude = "tests|venv"

# Formatting the output
pretty = true
error_summary = true
show_error_codes = true
show_error_context = true

# Analysis settings
ignore_missing_imports = true
disallow_untyped_defs = true
strict_optional = true
warn_no_return = true
warn_return_any = true
warn_unreachable = true

### PyTest settings ####################################################################
[tool.pytest.ini_options]
junit_suite_name = "Template Project Test Suite"

### Coverage settings ##################################################################
[tool.coverage.run]

source = [
    "src/package",
]
